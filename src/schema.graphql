type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  links: [Link!]!
}
type Delete {
  count: Int
}
type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
}
type AuthPayload {
  token: String
  user: User
}
type Query {
  info: String!,
  test: String,
  users: [User]!,
  user(id:ID!): User,
  feed: [Link!]!,
  getLinkByUrl(url:String!): [Link!]
}
type Mutation {
  post(url: String!, description: String!): Link!,
  updateLink(id: ID!, description: String!): Link!,
  deleteLinks(id: [ID!]): Delete,
  createUser(name: String!, email: String!): User!,
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}